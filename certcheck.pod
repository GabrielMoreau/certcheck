=head1 NAME

certcheck - check certificate chain or self-signed

=head1 SYNOPSIS

 certcheck check [--base|-b certbase] [--pub|-p certbase.pub.pem] [--key|-k certbase.key.pem] [--chain|-c certbase.chain.pem]
 certcheck text  [--base|-b certbase] [--pub|-p certbase.pub.pem]
 certcheck txt   [--base|-b certbase] [--pub|-p certbase.pub.pem]
 certcheck info  [--base|-b certbase] [--pub|-p certbase.pub.pem]
 certcheck version
 certcheck help

=head1 DESCRIPTION

The C<certcheck> command verifies a certificate.
For a certificate signed by a certification authority, the three parts (public, private and chain) are checked with C<openssl>.
For a self-signed certificate, it is verified that it works correctly with C<openssl>.

All certification files must be in PEM format.
This is why we prefer the C<.pem> extension for all files in this documentation.
We therefore prefer to use a double extension such as C<.pub.pem> for the public part of the certificate.
This is not a choice that is commonly found in online documentation.
However, after making many mistakes, we have decided to stick with this preference.

=head1 SUBCOMMANDS

=head2 C<check>

 certcheck check [--base|-b certbase] [--pub|-p certbase.pub.pem] [--key|-k certbase.key.pem] [--chain|-c certbase.chain.pem]

The subcommand C<check> verify the certificate chain
and takes the certificate name base as input.
The three certificates (public key, private key, and chain parts) can be inferred from a base form (C<certbase>) using the following rules:

 public:  certbase.pub.pem    certbase.crt     certbase.cer
 private: certbase.key.pem    certbase.key     certbase.keystore
 chain:   certbase.chain.pem  certbase.bundle  certbase.ca-bundle

In the case of a self-signed certificate,
the C<check> command does not search for a certification chain file, but only verifies that the certificate is valid.

Thus, the only data from the naming base (C<certbase>) on the command line
via the C<--base> argument allows you to find the two or three files in PEM format.

If the C<--chain> option is set to C<inside>, then the public key would also be used as a chaining certificate.
It is possible to integrate the public key and the chain into the same file.
However, please note that the public key must be the first of the two certificates.

Examples:

 certcheck check --base certbase
 certcheck check --base certbase --chain inside

=head2 C<text> or C<txt> or C<info>

 certcheck text  [--base|-b certbase] [--pub|-p certbase.pub.pem]

The C<text> (or C<txt>, C<info>) subcommand returns the main values
(lifetime, DNS name...) of the public key.
This command also allows you to find out the key design: C<self-signed> or C<chained>.
The certificate's name base can also be used as command-line input,
in which case the same rules as with L<check> are applied
to find the public certificate.

 certcheck text  --pub certbase.pub.pem
 certcheck txt   --pub certbase.pub.pem
 certcheck info  --pub certbase.pub.pem

=head2 C<version>

The C<version> subcommand returns the version of C<certcheck>.

 certcheck version

=head2 C<help>

The C<help> subcommand returns this help.

 certcheck help


=head1 SEE ALSO

Own project ressources:

=over

=item * L<Web site (Gitlab)|https://gricad-gitlab.univ-grenoble-alpes.fr/legi/soft/trokata/certcheck>

=item * L<Online Manual|https://legi.gricad-pages.univ-grenoble-alpes.fr/soft/trokata/certcheck/certcheck.html>

=item * L<Download package (Debian)|https://legi.gricad-pages.univ-grenoble-alpes.fr/soft/trokata/certcheck/download/>

=back

Note: The master Git repository in on the L<GRICAD Gitlab|https://gricad-gitlab.univ-grenoble-alpes.fr/legi/soft/trokata/certcheck>.
Other Git repository are mirror or fork.


=head1 AUTHORS

Written by Valentin Hilbig (hilbix https://gist.github.com/hilbix/bde7c02009544faed7a1)
and extended by Gabriel Moreau <Gabriel.Moreau@univ-grenoble-alpes.fr>, Grenoble - France


=head1 COPYRIGHT

=over

=item * Copyright (C) 2015, Valentin Hilbig,

=item * Copyright (C) 2023-2025, LEGI UMR 5519 / CNRS UGA G-INP, Grenoble, France.

=back

Licence: CC0 (Creative Commons Zero - https://spdx.org/licenses/CC0-1.0)
